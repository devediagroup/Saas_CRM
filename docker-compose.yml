version: '3.8'

services:
  # قاعدة البيانات MySQL
  mysql:
    image: mysql:8.0
    container_name: echoops_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-echoops_root_password_2024}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-echoops_crm}
      MYSQL_USER: ${MYSQL_USER:-echoops_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-echoops_password_2024}
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - echoops_network
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-echoops_root_password_2024}"]
      timeout: 20s
      retries: 10
      interval: 30s
      start_period: 30s

  # Redis للتخزين المؤقت
  redis:
    image: redis:7-alpine
    container_name: echoops_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - echoops_network
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 10s

  # الخادم الخلفي NestJS
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: echoops_backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USERNAME: ${MYSQL_USER:-echoops_user}
      DB_PASSWORD: ${MYSQL_PASSWORD:-echoops_password_2024}
      DB_DATABASE: ${MYSQL_DATABASE:-echoops_crm}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET:-echoops_jwt_secret_key_production_2024}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-echoops_jwt_refresh_secret_2024}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000,http://localhost:8080}
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - echoops_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      timeout: 30s
      retries: 5
      interval: 30s
      start_period: 60s

  # الواجهة الأمامية React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: echoops_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3001}
      VITE_APP_NAME: ${VITE_APP_NAME:-EchoOps CRM}
      VITE_APP_VERSION: ${VITE_APP_VERSION:-1.0.0}
      VITE_APP_ENV: ${VITE_APP_ENV:-production}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - echoops_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      timeout: 30s
      retries: 5
      interval: 30s
      start_period: 30s

  # Nginx كـ Reverse Proxy والـ Load Balancer
  nginx:
    image: nginx:alpine
    container_name: echoops_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - echoops_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      timeout: 10s
      retries: 3
      interval: 30s

  # PhpMyAdmin لإدارة قاعدة البيانات
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: echoops_phpmyadmin
    restart: unless-stopped
    ports:
      - "8082:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER:-echoops_user}
      PMA_PASSWORD: ${MYSQL_PASSWORD:-echoops_password_2024}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-echoops_root_password_2024}
      PMA_ARBITRARY: 1
      UPLOAD_LIMIT: 50M
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - echoops_network

  # Redis Commander لإدارة Redis
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: echoops_redis_commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
      HTTP_USER: ${REDIS_COMMANDER_USER:-admin}
      HTTP_PASSWORD: ${REDIS_COMMANDER_PASSWORD:-admin_password_2024}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - echoops_network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local
  nginx_cache:
    driver: local

networks:
  echoops_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
